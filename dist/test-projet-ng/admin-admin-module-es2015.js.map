{"version":3,"sources":["./src/app/admin/dashboard/dashboard.component.html","./src/app/admin/login/login.component.html","./src/app/admin/Admin.ts","./src/app/admin/admin-routing.module.ts","./src/app/admin/admin.module.ts","./src/app/admin/admin.service.ts","./src/app/admin/dashboard/dashboard.component.scss","./src/app/admin/dashboard/dashboard.component.ts","./src/app/admin/login/login.component.scss","./src/app/admin/login/login.component.ts"],"names":[],"mappings":"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","file":"admin-admin-module-es2015.js","sourcesContent":["export default \"<h2>{{pageTitle}}</h2>\\n  <table class=\\\"table  table-hover table-striped\\\" *ngIf=\\\"bars$ | async as bars; else loading\\\">\\n    <thead class=\\\"header_table\\\">\\n      <tr>\\n        <th scope=\\\"col\\\">Nom</th>\\n        <th scope=\\\"col\\\">Adresse</th>\\n        <th scope=\\\"col\\\">Action</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let bar of bars\\\" >\\n        <td>{{bar.name}}</td>\\n        <td>{{bar.address}}</td>\\n      <td><button class=\\\"btn btn-success\\\" (click)=\\\"isValid(bar)\\\">Valider</button></td>\\n      </tr>\\n    </tbody>\\n  </table>\\n<ng-template #loading>\\n  <fbapp-loader center></fbapp-loader>\\n</ng-template>\\n\"","export default \"<div class=\\\"signup-content\\\">\\n  <div class=\\\"container\\\">\\n    <h2>{{pageTitle}}</h2>\\n    <form [formGroup]= \\\"FormLogin\\\" #formDir=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(formDir)\\\">\\n\\n            <div [hidden]=\\\"formDir.submitted\\\">\\n            </div>\\n\\n              <div class=\\\"cross-validation\\\" [class.cross-validation-error]=\\\"(FormLogin.touched || FormLogin.dirty)\\\">\\n                <div class=\\\"form-group row\\\">\\n                  <div class=\\\"wrap-input100 validate-input \\\">\\n                    <span class=\\\"label-input100\\\">Email</span>\\n                    <input id=\\\"email\\\" class=\\\" input\\\" type=\\\"text\\\"\\n                    formControlName=\\\"email\\\"  required   placeholder=\\\"Email...\\\"   >\\n                    <div *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\"\\n                        class=\\\"alert alert-danger\\\">\\n\\n                      <div *ngIf=\\\"email.errors.required\\\">\\n                        Le champ email est obligatoire.\\n                      </div>\\n\\n                    </div>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group row\\\">\\n                  <div class=\\\"wrap-input100 validate-input \\\">\\n                    <span class=\\\"label-input100\\\">Mot de passe</span>\\n\\n                    <input id=\\\"password\\\" type='password' class=\\\"input \\\"\\n                        formControlName=\\\"password\\\" required placeholder=\\\"******\\\">\\n\\n                    <div *ngIf=\\\"password.invalid && password.touched\\\" class=\\\"alert alert-danger password-errors\\\">\\n                      <div *ngIf=\\\"password.errors.required\\\">\\n                        Password n'est pas valable\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n\\n              </div>\\n\\n\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\"\\n                     [disabled]=\\\"FormLogin.invalid\\\">Se connecter</button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-default\\\"\\n                     (click)=\\\"formDir.resetForm({})\\\">Annuler</button>\\n          </form>\\n          <!--\\n          <div class=\\\"submitted-message\\\" *ngIf=\\\"formDir.submitted\\\">\\n            <p>You've submitted your hero, {{ FormLogin.value.email }}!</p>\\n            <button (click)=\\\"formDir.resetForm({})\\\">Add new hero</button>\\n          </div>\\n\\n          -->\\n\\n    <p class=\\\"error\\\">{{ firstName$ | async }}</p>\\n  </div>\\n\\n</div>\\n\"","import { AdminShape } from './AdminShape';\r\n\r\nexport class Admin {\r\n  public constructor(\r\n    public readonly _id: number,\r\n    public readonly email: string,\r\n    public readonly password: string,\r\n    public readonly createDate: string,\r\n    public readonly deleteDate: Date,\r\n    public readonly token: string\r\n\r\n  ) {}\r\n\r\n  public static NEW(data: AdminShape): Admin {\r\n    return new Admin(data._id,data.email,data.password,data.createDate,data.deleteDate,data.token);\r\n  }\r\n\r\n  public static NEW_BUNCH(data: AdminShape[]): Admin[] {\r\n    return data.map(Admin.NEW);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\nconst routes: Routes = [ { path: 'login', component: LoginComponent },\n                          { path: 'dashboard', component: DashboardComponent },];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdminRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { FormsModule,ReactiveFormsModule }   from '@angular/forms';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { BarModule } from '../bar/bar.module';\n\n\n\n@NgModule({\n  declarations: [LoginComponent, DashboardComponent],\n  imports: [\n    CommonModule,\n    AdminRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    BarModule\n\n\n  ]\n})\nexport class AdminModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { switchMap, map, tap } from 'rxjs/operators';\nimport { AdminModel } from './AdminModel';\nimport { HttpClient } from '@angular/common/http';\nimport { Admin } from './Admin';\nimport { AdminShape } from './AdminShape';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminService {\n  private authenticatedAdmin!: Admin;\n  //uri = 'http://localhost:3000';\n  uri = 'https://projet-annuel-node.herokuapp.com';\n\n  public constructor(private readonly httpClient: HttpClient) {}\n\n  public get currentAdmin() {\n    return this.authenticatedAdmin=JSON.parse(localStorage.getItem('admin'));\n  }\n  public authenticate(email: string, password: string) {\n    const body = { email, password };\n    console.log(body);\n    return this.httpClient.post(`${this.uri}/api/auth/admins`, body).pipe(\n      map(Admin.NEW),\n      tap(admin => {\n        localStorage.setItem('admin', JSON.stringify(admin));\n        this.authenticatedAdmin = admin;\n      }));\n  }\n  public create(adminCreate: AdminModel) {\n    return this.httpClient.post(`${this.uri}/api/admins`, adminCreate);\n  }\n  public update(adminCreate: AdminModel,_id: number) {\n    return this.httpClient.patch<AdminShape>(`${this.uri}/api/admins/${_id}`, adminCreate)\n    .subscribe((admin) => {\n      return this.authenticatedAdmin = admin;\n    });\n  }\n\n  public logout(): void {\n            // remove admin from local storage and set current admin to null\n    localStorage.removeItem('admin');\n    this.authenticatedAdmin = null;\n  }\n\n\n}\n","export default \".header_table {\\n  background-color: #589442;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vZGFzaGJvYXJkL0M6XFxVc2Vyc1xcU3RlcGhhbmVcXERvY3VtZW50c1xcRVNHSVxcSlNcXEFuZ3VsYXJcXGZvb2Jhci9zcmNcXGFwcFxcYWRtaW5cXGRhc2hib2FyZFxcZGFzaGJvYXJkLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9hZG1pbi9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UseUJBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaGVhZGVyX3RhYmxle1xyXG4gIGJhY2tncm91bmQtY29sb3I6IzU4OTQ0MjtcclxufVxyXG4iLCIuaGVhZGVyX3RhYmxlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzU4OTQ0Mjtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { switchMap, map, tap } from 'rxjs/operators';\nimport {AdminService } from '../admin.service';\nimport { FbappPage } from 'src/app/shared/FbappPage';\nimport { BarService } from '../../bar/bar.service';\nimport { Bar} from '../../bar/Bar';\nimport { Router } from '@angular/router';\n\nimport { DataLoaderService } from 'src/app/shared/data-loader.service';\n\n\n@Component({\n  selector: 'fbapp-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n  providers: [DataLoaderService],\n})\nexport class DashboardComponent implements OnInit {\n\n  public readonly pageTitle = 'Liste des bars en attente de validation';\n  public bars$: Observable<Bar[]>;\n\n  public filterInput!: string;\n  constructor(\n    private readonly barService: BarService,\n    private readonly barsLoaderService: DataLoaderService<Bar[]>,\n    private readonly adminService: AdminService,\n    private router: Router\n\n  ) { }\n\n  ngOnInit() {\n\n    this.initBarsLoader();\n\n    this.listBars();\n\n  }\n  public reset(): void {\n    this.barsLoaderService.reset();\n    this.filterInput = '';\n  }\n /* private initFavoriteCharaterId(): void {\n    const { currentUser } = this.userService;\n    if (currentUser) {\n      this.favoriteCharacterId = currentUser.favoriteCharacter;\n    }\n  }\n*/\n  private initBarsLoader(): void {\n    const bars$ = this.listBars();\n    this.barsLoaderService.init(bars$);\n    this.bars$ = this.barsLoaderService.stream$;\n  }\n\n  private listBars(): Observable<Bar[]>{\n\n    return this.barService.getListBarInvalide();\n  }\n  public isValid(bar:Bar){\n    //alert('ok');\n    this.bars$=this.barService.ValidateBar(bar);\n\n  }\n}\n\n\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AdminService } from '../admin.service';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { FbappPage } from 'src/app/shared/FbappPage';\nimport { NgForm } from '@angular/forms';\n\n\n@Component({\n  selector: 'fbapp-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit,FbappPage {\n  public pageTitle = 'Se connecter (en tant qu\\'Admin)';\n  @ViewChild('login', { static: false }) loginInput: ElementRef;\n  public firstName$!: Observable<string>;\n  FormLogin: FormGroup;\n  constructor(private readonly adminService: AdminService,private readonly router: Router,private readonly http: HttpClient) { }\n\n  ngOnInit() : void {\n    this.FormLogin = new FormGroup({\n      'email': new FormControl('',[\n        Validators.required,\n        Validators.email,\n\n      ]),\n      'password': new FormControl('',[\n        Validators.required,\n      ]),\n    }); // <-- add custom validator at the FormGroup level\n  }\n  get email() { return this.FormLogin.get('email'); }\n\n  get password() { return this.FormLogin.get('password'); }\n  private goToHome(): void {\n    this.router.navigateByUrl('/admin/dashboard');\n  }\n  public onSubmit(formDir): void {\n\n    const { email, password } = formDir.value;\n    /*this.authService.authenticate(email, password).subscribe(admin=>{\n\n    })*/console.log(formDir.value);\n    this.firstName$=this.adminService.authenticate(email, password).pipe(\n      map((admin) => {\n        //localStorage.setItem(\"admin\",JSON.stringify(admin));\n        //localStorage.removeItem(\"admin\")\n        //localStorage.getItem(\"admin\")\n        console.log(admin);\n        this.goToHome();\n        return null;\n      }),\n      catchError(() => {\n        this.resetForm(formDir);\n        return of('Login failed');\n      }),\n    );\n  }\n  private resetForm(formDir: NgForm): void {\n    formDir.reset();\n    this.loginInput.nativeElement.focus();\n  }\n\n\n}\n\n"],"sourceRoot":"webpack:///"}